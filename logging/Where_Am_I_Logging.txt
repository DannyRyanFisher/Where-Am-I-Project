Where Am I Project 


Logging.

Logging:
Straight-line test. Modify parameters in costmap and local & global config files until robot "drives in a time-efficient manor with no major adjustments of stoppages"
	Include image of destination. With time ref.

	Start with initial parameters in a table.
	
	Create a logging performance and parameter changes table.
		Did robot navigate to location according to criteria? If yes, peformance test complete. 		
		Problem:
		Solution1:
		Solution2:
		Evaluation: did solution work? If not, Note parameter changed.

Easy-turn test.
Hard-turn test. 
5 point test.
Run autonomous node test (supplied)
Completed!

-------------------------------------------------------------------------------------------------------

Table of initial parameters:
base_local_planner_params.yaml
   holonomic_robot:false

costmap_common_params.yaml
   obstacle_range: 0.0
   raytrace_range: 0.0
   transform_tolerance: 0.0
   inflation_radius: 0.0

local_common_params.yaml
   update_frequency: 50.0
   publish_frequency: 50.0
   width: 20.0
   height: 20.0
   resolution: 0.05

global_common_params.yaml
   update_frequency: 50.0
   publish_frequency: 50.0
   width: 40.0
   height: 40.0
   resolution: 0.05

-------------------------------------------------------------------------------------------------------
Initial Launching Stage
1) 
Problem: transform_timeout error.
Image: 12-42-02
Attempted solution: set transform_timeout to default value of 0.2.
Did solution work? Yes 
Image: 12-49-46
Next action: launch environment again; request robot to move to a user-defined goal position.

2)
Problem: map_update_error.
Image: 12-52-09
Attempted solution: reduce the frequency of costmap update and publishing for global and local costmaps
	reduce both update and publish frequencies for global & local to 5hz.
Did solution work?  Y
Image: 12-59-02
Next action: fix control_loop error

3)
Problem: control_loop error
Image: 12-59-02
Attempted solution: reduce the controller_frequency value from 20hz to 10hz
Did solution work? Y 
Image: 13-04-28
Next action: enable robot to navigate without crashing into wall (see previous image)

-------------------------------------------------------------------------------------------------------
Template

Problem: 
Image: 
Attempted solution: 
Did solution work?  
Image: 
Next action: 

-------------------------------------------------------------------------------------------------------
Straight-line test
Location: Image: 13-24-05

4) Adjust inflation radius to allow the robot to navigate through a narrow corridor in the straight-line test.
Problem: Robot does not navigate according to the desired behaviour. 
Image: 
Attempted solution: inflation_radius: 1.0 
Did solution work? N- control & map update errors.
Image: 13-24-27
Next action: adjust controller_frequency and update_frequency and publish_frequency

5)
Problem: map_update & control_loop error
Image: 13-24-27
Attempted solution: update & publish_frequency to 3Hz and controller_frequency to 5Hz
Did solution work? Y 
Image: 13-31-27
Next action: increase inflation radius

6)
Problem: robot drives into wall when trying to navigate
Image: 13-31-27
Attempted solution: increase inflation radius to 2.
Did solution work? N 
Image: 13-33-54
Attempted solution: increase inflation radius to 4.
Did solution work? N
Note: map_update error appeared but was not fatal. 
Image: N/A
Attempted solution: increase inflation radius to 8.
Did solution work? N
Note: rover appeared to turn further before crashing.
	map_update error increased to ~0.8s
Image: 13-38-13
Next action: fix map_update

7)
Problem: map update error
Image: 13-38-13
Attempted solution: reduce computational cost of mapping
	half size of global and local maps i.e. global is now 20x20 and local 10x10
Did solution work?  N 
Image: 13-49-46
Attempted solution: reduce computational cost of mapping
		reduce resolution to 0.02
Did solution work?  N, but robot was able to navigate to goal for first time.
Image: 13-53-17

Next action: reduce map_update rate (update & publish_frequency)

8)
Problem: map_update error 
Image: 13-53-17
Attempted solution: reduce map_update rate (update & publish_frequency) to 2Hz
Did solution work? N  
Image: 13-57-26
Next action: reduce just global rates: update:1Hz
				       publish: 0.5Hz
Image: 13-59-16?
Did solution work? Y & N; Map update appeared once. 1Hz potentially stil high
			Control_update appeared again. 5Hz too high.
			Robot navigated and passed test!

Next action: remove control_update error by  reducing controller_frequency

9)
Problem: control_update error
Image: 13-59-16?
Attempted solution: reduce controller_frequency to 2.5Hz
Did solution work? Y
		All errors missing and robot completes the 'straight-lined test'
Image: 14-04-09
Next action: Up the test difficulty.

10)
Problem: Want to avoid close-to barrier behavior if possible
Image: 15-02-00 ; 15-04-38 failed.
Attempted Solution: Increase inflation_radius to 12.
Did the solution work? N map_update over 1 second!
Image: 15-06-48

11)
Problem: map_update error ; over second!
Image 15-06-48
Attempted solution: reduce global height & width to 15 x 15
			reduce global resolution to 0.01
Did the solution work? N changes appear to have made the issue worse.
Image: 15-11-12
Attempted solution: change resolution to 0.1 (10 times bigger in value; maybe 10 times less expensive)
Did solution work? N ; but resolution value increase appears to have lessened the delay to 1.4secs)
Image: 15-14-07	

Attempted solution: Try resolution of 0.8.
Did solution work? No change. possibly reduced it (reduced to 1.1-1.2 after couple of mins)
Image: 15-18-01

Attempted solution:
	Change resolution back to 0.05 
	Reduce inflation radius to 10
	Reduce update_frequency for global map to 0.7Hz

Did the solution work? Y - steering improved, no other issues.

Close to wall
15-24-48

-------------------------------------------------------------------------------------------------------
Around corners test
Image 15-44-06

12)
Aim: robot to navigate to goal on othersie of wall
Problem: robot drives into walls that are immediately between itself and the target.
Image: 15-25-57  Trying to drive through wall to get to the goal
Attempted solution: introduce raytrace_range and obstacle_range parameters to prevent collisions.
	try defaults
	obstacle range: 2.5
	and raytrace_range: 3.0
Did the solution work? Y Not on pre-defined route. Images below show	
37-47
to 
40-02

NOTE: there was some map_update error nearer the end of the around corner test (image)

Successful on goal in 15-44-06 (standard around corners test)
1st attempt: SUCCESS
Image: 15-45-46 
2nd attempt: SUCCESS
Image: 15-50-08
3rd Attempt: SUCCESS
Image: 15-52-49
Observations:
15-51-33
15-51-41

Next action: increase difficulty of test

-------------------------------------------------------------------------------------------------------
Non-standard difficult corner test
Start image: 15-56-48
End Image: 15-59-17

Difficult corner test
Image: 16-00-58

13)
1st attempt: FAIL
Reversing into barrier until stuck
16-01-28

2nd attempt: FAIL
driving towards wall, then alongside, then stopped, reversed until stuck. didn't recover
16-04-33

3rd attempt: FAIL
16-09-38 & 16-09-46

NOTE: currently the failure mode seems to be: when instructed to go to difficult corner location (IMAGE) the robot comes across a barrier (two different examples) whereby it drives towards it, begins turning away from it and comes to a hault. Note: the robot does not touch the wall. Then it begins to reverse, continuing backward until it eventually stops.


14)
Problem: Robot drives near wall, turns and reverses until it stops thus not being able to recover
Image: 16-09-38
Attempted solution: Ideas
			Increase update frequency; reduce publishing frequency?
			Increase obstacle range
			Increase raytrace range
Attempted solution: update_frequency increased to 3.0
			publish_frequency to 1.0

Robot behaviour:
16-23-31

Did solution work?  Y & N  
Image: 16-24-48
Next action: try to reduce global frequency and local frequency slightly.


15)
Problem: map_update errors due to local update frequency of 3.0Hz and global update_frequncy of 0.7Hz 
Image: 16-24-48
Attempted solution:  	global update_frequency: 0.6Hz
			local update_frequency: 2.7Hz 
Did solution work?  Y. but robot behviour is demonstrates unresponsive driving. 
Image: 16:33 set of images
Next action: increase raytrace to ensure robot sees further ahead and can navigate more tightly around corners.

16)
Problem: unresponsive steering
Image: 16:33 set
Attempted solution: set raytrace to 5m
Did solution work? Y & N behaviour wasn't largely improved if at all.
Image: 16:36 16:37's
Next action: try increase inflation_radius

17)
Problem: unresponsive steering
Image: 16:36 16:37 set
Attempted solution: set inflation_radius to 11
Did solution work? N
Image: 
Next action: reset inflation radius to 10
		try change obstacle_range

18)
Problem: unresponsive steering
Image: 16:36 & 16:37's 
Attempted solution: increase obstacle range to 3.5m
Did solution work? N. robot got stuck. then recovered 1min later. 
			Not convinced this change had anything to do with it.
------------------------------------ 31st July --------------------------------
Image: 11-01-12
Next action: increase the inflation radius to enable more responsive driving in the more open space.


31st July Plan
So the important steps to complete today are:
- AMCL parameters for supplied robot

- Design robot 
	robot model should have significant changes to the robot's base and possibly sensor locations

- Choose parameters for this robot
	-Costmap parameters (common, local, global)
	- general parameters
	- AMCL parameters.
- Log all parameter changes
- Write up the main log points for each robot.
- Robot should be able to navigate using the supplied executable

19)
Problem: unresponsive steering
Image: 11-01-12
Attempted solution: set inflation_radius to 15;
Did solution work? N; map_update error re-occurs.
Image: 11-19-41
Next action: change inflation radius back to 11
		try to increase the map update rates in the hope it will increase responsiveness. 

20)
Problem: map-update error occurs.
Image: 11-19-41
Attempted solution: try to reduce map_update errors from 2 seconds to 0.5-1 second to establish resolution effect.
			resolution changed to 5 from 0.05 for both local and global costmaps
Did solution work? N; received error about sensor being out of bounds of map
Image: 11-26-00
Next action: change resolution to 0.1 

21)
Problem map-update error occurs 
Image: 11-19-41
Attempted solution: resolution set to 0.1 (default is 0.05): inflation radius is 15.
Did solution work? Yes & No;
			Yes: the map_update error does not occur
			No: the robot was not able to navigate without getting stuck
Image: 11-31-35
Next action: change resolution to 0.08

22)
Problem: robot not able to navigate at 0.1 resolution value
Image: 11-31-35
Attempted solution: reduce the resolution value (increasing computational cost) to 0.08 for both local and global
Did solution work? Y; but performance from robot was poor.
Image: N/A
Next action: increase update & publish rate of local map

23) 
Problem: rover having poor driving performance: getting stuck when navigating down narrow paths.
Image: 11-19-41
Attempted solution: increase local costmap update rate at the lower resolution of 0.08 and measure impact
			local update rate change from 2.7 to 4Hz
			local publish rate change from 1.0 to 2.0Hz
Did the solution work? N
Image: 11-47-10

24)
Problem: robot getting stuck on parts of the map.
Image: 11-47-10
Attempted solution: increase raytrace range to allow robot to see further ahead.
			raytrace is 5.0 and changed to 7.0
			reduce inflation radius to 10.
Did solution work? Y; robot appears to be able to chose alternative path whenever it gets stuck and recover. 

Attempted solution: Reduce inflation radius to 9.
Did solution work? Y
Image: 12-02-23 to 12-03-04

Attempt #2: N; 12-09-25
Attempt #3: N; 12-11-47
Attempt #4: Aborted

Next action: try reduce inflation radius again to 7. 
Attempt #1: Y; 12-17-38
Attempt #2: N; 12-19-57

Issue with stopping on local costmap: 12-26-20

Changed resolution from 0.08 to 0.02
HighRes image 12-30-30
Changes local height and width to 5 x 5 (Image 12-33-07)
Changed raytrace from 7.0 to 5.0
Change obstacle range from 3.5 to 4.0

Successful run:
Images: 12-37-44 to 12-38-13

Backing up issue: 
Images 12-42-29 to 12-42-52


Then changed raytrace to 2.0

Finished with parameters in image 14-21-..


-----------------------------------------     AMCL     -----------------------------------------------
Initial performance with default values.
Some random shots 15-19 to 15-20

Time for Straight-line test: 37s

1)
Problem: performance is slow; map update seems to be lagging.
	update of posearray is very slow, often in front and inaccurate.
Attempted solution: 	reduce max particles from 5000 to 700
			reduce min particles from 100 to 50
Did solution work? N; no major decrease in time; 39 seconds.
next action: try change filter_update variables update_min_d and update_min_a

2)
Problem: performance is slow; map update seems to be lagging.
	update of posearray is very slow, often in front and inaccurate.
Attempted solution:  	update_min_d change from 0.2 to 0.05 
			update_min_a change from 0.5236 to 0.1
Did solution work? Y; solving the laggy behaviour of the posearray; 37 seconds
Image: 15-49-37
next action: Try to reduce computational burden to ensure a "smoother" and less fault prone program. 

15/08/19

3)
Problem: Laggy behaviour of RViz simulation. 
Image: N/A
Attempted solution: Reduce the laser max range to 1m.
Did solution work?  N Pose Array ruined. Increase range
Image: 11-42-02
Next action: Increase Laser range max to 5m.

4)
Problem: PoseArray Spread out causing poor navigation.
Image: 11-42-02
Attempted solution: Increase laser max range to 5m
Did solution work? Y, includes all of map if no obstacles in the way. 
Image: 11-47-45
Next action: Try reduce to 3m to reduce processing.

4)
Problem: Computation cost high (lagging)
Image: 15-49-37
Attempted solution: Decrease laser max range to 3m.
Did solution work? Y, Pose Array appears tight enough to be accuurate
Image: 11-54-44; 11-56-42 shows a little 'increase' in posearray arrows
Next action: 

3m 	12-10-54 12-11-56 12-12-38 12-13-49 12-14-40
5m 	12-06-41 12-25-06 12-26-37 12-27-17 12-28-36
10m	12-18-34 12-20-07 12-20-38 12-21-17 12-22-42

The higher the max_laser range, it appears that the more precise the posearray. 5m seems the best balance. 
The better the estimation of where the obstacles are, the better the localization results.

5) Investigate the other parameters
laser_beam_max
50 15-46-24 
30 15-51-48
10 15-48-34

50 chosen as more accurate.
6) Investigate lazer_z_hit/rand

Change hit/rand from 95/5 to 70/30
16-02-50 Appears only as innaccurate final pose

Try 50/50 to see if condition deteriorates.
16-07-17

Reverted back to 95 05 to test for re-assurance.
16-09-27 
Pose array seems to be better ' aligned' left to right. Still spread forward and backward.

Try 98 02 mix
16-15-41 no real difference. Remain at default.


6) Expected noise in odometry changed to 0.02 from default value of 0.2
16-20-14
16-23-49 Both images show accuracy







